// Generated by view binder compiler. Do not edit!
package com.example.appquanlidiem.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.appquanlidiem.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSelectWeekTkbBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnYes;

  @NonNull
  public final CheckBox checkBoxDoubleWeek;

  @NonNull
  public final CheckBox checkBoxSelectAll;

  @NonNull
  public final CheckBox checkBoxSingleWeek;

  @NonNull
  public final RecyclerView rvWeekOfTerm;

  @NonNull
  public final TextView textView3;

  private DialogSelectWeekTkbBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnCancel,
      @NonNull Button btnYes, @NonNull CheckBox checkBoxDoubleWeek,
      @NonNull CheckBox checkBoxSelectAll, @NonNull CheckBox checkBoxSingleWeek,
      @NonNull RecyclerView rvWeekOfTerm, @NonNull TextView textView3) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnYes = btnYes;
    this.checkBoxDoubleWeek = checkBoxDoubleWeek;
    this.checkBoxSelectAll = checkBoxSelectAll;
    this.checkBoxSingleWeek = checkBoxSingleWeek;
    this.rvWeekOfTerm = rvWeekOfTerm;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSelectWeekTkbBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSelectWeekTkbBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_select_week_tkb, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSelectWeekTkbBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = ViewBindings.findChildViewById(rootView, id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_yes;
      Button btnYes = ViewBindings.findChildViewById(rootView, id);
      if (btnYes == null) {
        break missingId;
      }

      id = R.id.check_box_double_week;
      CheckBox checkBoxDoubleWeek = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxDoubleWeek == null) {
        break missingId;
      }

      id = R.id.check_box_select_all;
      CheckBox checkBoxSelectAll = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSelectAll == null) {
        break missingId;
      }

      id = R.id.check_box_single_week;
      CheckBox checkBoxSingleWeek = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxSingleWeek == null) {
        break missingId;
      }

      id = R.id.rv_week_of_term;
      RecyclerView rvWeekOfTerm = ViewBindings.findChildViewById(rootView, id);
      if (rvWeekOfTerm == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new DialogSelectWeekTkbBinding((ConstraintLayout) rootView, btnCancel, btnYes,
          checkBoxDoubleWeek, checkBoxSelectAll, checkBoxSingleWeek, rvWeekOfTerm, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
